import streamlit as st
import sqlite3
import os
import shutil
from PIL import Image
import pandas as pd

# --- Configuration ---
DATABASE_NAME = 'teacher_management.db'
PHOTO_DIR = 'teacher_photos'
UPLOAD_FOLDER = PHOTO_DIR 

# --- Database Setup and Functions ---

def get_db_connection():
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite.
    ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ st.connection ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ, ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞ fallback ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á.
    """
    try:
        if "connections" in st.secrets and "teacher_db" in st.secrets["connections"]:
            # ‡πÉ‡∏ä‡πâ st.connection ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ deploy ‡∏ö‡∏ô Streamlit Community Cloud
            return st.connection('teacher_db', type='sql')
    except Exception:
        pass # ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ st.secrets ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    
    # Fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÅ‡∏ö‡∏ö local ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ st.connection
    conn = sqlite3.connect(DATABASE_NAME)
    conn.row_factory = sqlite3.Row # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ
    return conn

def setup_database():
    """
    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á 'teachers' ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'position' ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á)
    """
    conn = get_db_connection()
    
    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection (‡πÄ‡∏ä‡πà‡∏ô‡∏ö‡∏ô Streamlit Community Cloud)
        with conn.session as s:
            s.execute('''
                CREATE TABLE IF NOT EXISTS teachers (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    full_name TEXT NOT NULL,
                    school_affiliation TEXT,
                    major_subject TEXT,
                    teaching_subjects TEXT,
                    contact_number TEXT,
                    photo_path TEXT,
                    position TEXT  
                )
            ''')
            s.commit()
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'position' ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤)
            cursor = s.connection.cursor() # ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á sqlite3 cursor ‡∏à‡∏≤‡∏Å st.connection
            cursor.execute("PRAGMA table_info(teachers)")
            columns = [col[1] for col in cursor.fetchall()]
            if 'position' not in columns:
                s.execute("ALTER TABLE teachers ADD COLUMN position TEXT")
                s.commit()
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÅ‡∏ö‡∏ö local)
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS teachers (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                full_name TEXT NOT NULL,
                school_affiliation TEXT,
                major_subject TEXT,
                teaching_subjects TEXT,
                contact_number TEXT,
                photo_path TEXT,
                position TEXT  
            )
        ''')
        conn.commit()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'position' ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        cursor.execute("PRAGMA table_info(teachers)")
        columns = [col[1] for col in cursor.fetchall()]
        if 'position' not in columns:
            cursor.execute("ALTER TABLE teachers ADD COLUMN position TEXT")
            conn.commit()
        conn.close() # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    if not os.path.exists(UPLOAD_FOLDER):
        os.makedirs(UPLOAD_FOLDER)

@st.cache_data(ttl=3600)
def get_all_teachers_from_db_cached():
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô cache ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û.
    """
    conn = get_db_connection()
    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        df = conn.query('SELECT * FROM teachers', ttl=0) 
        return df.to_dict(orient='records')
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        cursor = conn.cursor()
        teachers = cursor.execute('SELECT * FROM teachers').fetchall()
        conn.close()
        return [dict(t) for t in teachers]

def export_teachers_to_excel():
    """
    ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel (.xlsx).
    """
    conn = get_db_connection()
    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        df = conn.query('SELECT * FROM teachers', ttl=0)
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        cursor = conn.cursor()
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á 'position'
        cursor.execute("SELECT id, full_name, school_affiliation, position, major_subject, teaching_subjects, contact_number, photo_path FROM teachers")
        data = cursor.fetchall()
        column_names = [description[0] for description in cursor.description]
        conn.close()
        df = pd.DataFrame(data, columns=column_names)

    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
    df.rename(columns={
        'id': '‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏£‡∏π',
        'full_name': '‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•',
        'school_affiliation': '‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        'position': '‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á', 
        'major_subject': '‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å',
        'teaching_subjects': '‡∏™‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤',
        'contact_number': '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
        'photo_path': '‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û'
    }, inplace=True)
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
    output = pd.ExcelWriter('teachers_data.xlsx', engine='xlsxwriter')
    df.to_excel(output, index=False, sheet_name='‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π')
    output.close() 

    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    with open('teachers_data.xlsx', 'rb') as f:
        file_data = f.read()
    os.remove('teachers_data.xlsx') # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    return file_data

def get_teacher_by_id_from_db(teacher_id):
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏.
    """
    conn = get_db_connection()
    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        try:
            teacher = conn.query(f'SELECT * FROM teachers WHERE id = {teacher_id}', ttl=0).iloc[0].to_dict()
            return teacher
        except IndexError:
            return None # ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        cursor = conn.cursor()
        teacher = cursor.execute('SELECT * FROM teachers WHERE id = ?', (teacher_id,)).fetchone()
        conn.close()
        return dict(teacher) if teacher else None

def add_teacher_to_db(full_name, school_affiliation, major_subject, teaching_subjects, contact_number, photo_file=None, position=None):
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•.
    """
    conn = get_db_connection()
    saved_photo_path = None
    if photo_file:
        try:
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡∏á‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå UPLOAD_FOLDER ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
            extension = os.path.splitext(photo_file.name)[1]
            new_filename = f"{os.path.splitext(photo_file.name)[0]}_{os.urandom(8).hex()}{extension}"
            saved_photo_path_full = os.path.join(UPLOAD_FOLDER, new_filename)
            
            with open(saved_photo_path_full, "wb") as f:
                f.write(photo_file.getbuffer())
            saved_photo_path = new_filename # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            st.toast(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {saved_photo_path_full}", icon="üì∏")
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {e}")
            saved_photo_path = None

    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        with conn.session as s:
            s.execute('''
                INSERT INTO teachers (full_name, school_affiliation, major_subject, teaching_subjects, contact_number, photo_path, position)
                VALUES (:full_name, :school_affiliation, :major_subject, :teaching_subjects, :contact_number, :photo_path, :position)
            ''', params=dict(
                full_name=full_name,
                school_affiliation=school_affiliation,
                major_subject=major_subject,
                teaching_subjects=teaching_subjects,
                contact_number=contact_number,
                photo_path=saved_photo_path,
                position=position
            ))
            s.commit()
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        cursor = conn.cursor()
        cursor.execute('''
            INSERT INTO teachers (full_name, school_affiliation, major_subject, teaching_subjects, contact_number, photo_path, position)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (full_name, school_affiliation, major_subject, teaching_subjects, contact_number, saved_photo_path, position))
        conn.commit()
        conn.close()
    st.cache_data.clear() # ‡∏•‡πâ‡∏≤‡∏á cache ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ñ‡∏π‡∏Å‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á
    st.success(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π '{full_name}' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

def update_teacher_in_db(teacher_id, full_name, school_affiliation, major_subject, teaching_subjects, contact_number, photo_file=None, position=None):
    """
    ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏.
    """
    conn = get_db_connection()
    current_teacher = get_teacher_by_id_from_db(teacher_id)

    if not current_teacher:
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏£‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
        return False

    updates = []
    # ‡πÉ‡∏ä‡πâ List ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö Positional ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    params = [] 

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if full_name is not None and full_name != current_teacher['full_name']:
        updates.append("full_name = ?")
        params.append(full_name)
    if school_affiliation is not None and school_affiliation != current_teacher['school_affiliation']:
        updates.append("school_affiliation = ?")
        params.append(school_affiliation)
    if major_subject is not None and major_subject != current_teacher['major_subject']:
        updates.append("major_subject = ?")
        params.append(major_subject)
    if teaching_subjects is not None and teaching_subjects != current_teacher['teaching_subjects']:
        updates.append("teaching_subjects = ?")
        params.append(teaching_subjects)
    if contact_number is not None and contact_number != current_teacher['contact_number']:
        updates.append("contact_number = ?")
        params.append(contact_number)
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    if position is not None and position != current_teacher.get('position', ''): 
        updates.append("position = ?")
        params.append(position)
    
    saved_photo_path = None # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö saved_photo_path
    if photo_file:
        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
        if current_teacher and current_teacher['photo_path']:
            # ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô
            old_photo_full_path = os.path.join(UPLOAD_FOLDER, current_teacher['photo_path'])
            if os.path.exists(old_photo_full_path):
                try:
                    os.remove(old_photo_full_path)
                    st.info(f"‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤: {old_photo_full_path}")
                except Exception as e:
                    st.warning(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤: {e}")
        try:
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
            extension = os.path.splitext(photo_file.name)[1]
            new_filename = f"{os.path.splitext(photo_file.name)[0]}_{os.urandom(8).hex()}{extension}"
            saved_photo_path_full = os.path.join(UPLOAD_FOLDER, new_filename)
            with open(saved_photo_path_full, "wb") as f:
                f.write(photo_file.getbuffer())
            saved_photo_path = new_filename
            updates.append("photo_path = ?")
            params.append(saved_photo_path)
            st.toast(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà: {saved_photo_path_full}", icon="üì∏")
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà: {e}")
            
    elif st.session_state.get('photo_cleared', False):
        # ‡∏ñ‡πâ‡∏≤ checkbox '‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô' ‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if current_teacher and current_teacher['photo_path']:
            old_photo_full_path = os.path.join(UPLOAD_FOLDER, current_teacher['photo_path'])
            if os.path.exists(old_photo_full_path):
                try:
                    os.remove(old_photo_full_path)
                    st.info(f"‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á): {old_photo_full_path}")
                except Exception as e:
                    st.warning(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á): {e}")
        updates.append("photo_path = ?")
        params.append(None) # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ photo_path ‡πÄ‡∏õ‡πá‡∏ô NULL ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

    if not updates:
        st.info("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á")
        return False

    params.append(teacher_id) # ‡πÄ‡∏û‡∏¥‡πà‡∏° ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏π‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö WHERE clause
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UPDATE ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Positional Parameters (?)
    query = f"UPDATE teachers SET {', '.join(updates)} WHERE id = ?"
    
    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection (‡πÉ‡∏ä‡πâ Named Parameters)
        named_params = {}
        # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å params list ‡πÑ‡∏õ‡∏¢‡∏±‡∏á named_params dictionary
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
        if full_name is not None and full_name != current_teacher['full_name']:
            named_params['full_name'] = full_name
        if school_affiliation is not None and school_affiliation != current_teacher['school_affiliation']:
            named_params['school_affiliation'] = school_affiliation
        if major_subject is not None and major_subject != current_teacher['major_subject']:
            named_params['major_subject'] = major_subject
        if teaching_subjects is not None and teaching_subjects != current_teacher['teaching_subjects']:
            named_params['teaching_subjects'] = teaching_subjects
        if contact_number is not None and contact_number != current_teacher['contact_number']:
            named_params['contact_number'] = contact_number
        if position is not None and position != current_teacher.get('position', ''):
            named_params['position'] = position

        # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ photo_path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö named_params
        if photo_file:
            # ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á saved_photo_path ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ named_params ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            try:
                extension = os.path.splitext(photo_file.name)[1]
                new_filename = f"{os.path.splitext(photo_file.name)[0]}_{os.urandom(8).hex()}{extension}"
                saved_photo_path_full = os.path.join(UPLOAD_FOLDER, new_filename)
                with open(saved_photo_path_full, "wb") as f:
                    f.write(photo_file.getbuffer())
                saved_photo_path = new_filename
                named_params['photo_path'] = saved_photo_path
            except Exception as e:
                st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà: {e}")
                named_params['photo_path'] = None 
        elif st.session_state.get('photo_cleared', False):
            named_params['photo_path'] = None

        named_params['id'] = teacher_id
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á query string ‡∏ó‡∏µ‡πà‡∏°‡∏µ named parameters ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô named_params (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô 'id')
        named_updates_clause = []
        for key in named_params.keys():
            if key != 'id': 
                named_updates_clause.append(f"{key} = :{key}")
        named_query = f"UPDATE teachers SET {', '.join(named_updates_clause)} WHERE id = :id"

        with conn.session as s:
            s.execute(named_query, params=named_params)
            s.commit()
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÉ‡∏ä‡πâ Positional Parameters)
        cursor = conn.cursor()
        cursor.execute(query, tuple(params)) # ‡∏™‡πà‡∏á List ‡∏Ç‡∏≠‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô Tuple
        conn.commit()
        conn.close()
    st.cache_data.clear()
    st.success(f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π ID {teacher_id} ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    return True

def delete_teacher_from_db(teacher_id):
    """
    ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå.
    """
    conn = get_db_connection()
    teacher_to_delete = get_teacher_by_id_from_db(teacher_id)

    if not teacher_to_delete:
        st.error(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏£‡∏π ID {teacher_id} ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö")
        return False

    if hasattr(conn, 'session'):
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö st.connection
        with conn.session as s:
            s.execute('DELETE FROM teachers WHERE id = :id', params=dict(id=teacher_id))
            s.commit()
    else:
        # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sqlite3 ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        cursor = conn.cursor()
        cursor.execute('DELETE FROM teachers WHERE id = ?', (teacher_id,))
        conn.commit()
        conn.close()

    # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    if teacher_to_delete and teacher_to_delete['photo_path']:
        photo_full_path = os.path.join(UPLOAD_FOLDER, teacher_to_delete['photo_path'])
        if os.path.exists(photo_full_path):
            try:
                os.remove(photo_full_path)
                st.info(f"‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {photo_full_path}")
            except Exception as e:
                st.warning(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {e}")
    st.cache_data.clear()
    st.success(f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π ID {teacher_id} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    return True

# --- Streamlit App UI ---

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(
    layout="wide", 
    page_title="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô 2",
    page_icon="üè´"  
)

# ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå Minimal
st.markdown("""
<style>
    /* ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏° Deploy */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    
    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å */
    h1, h2, h3, h4, h5, h6 {
        color: #333; /* ‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô */
        font-family: 'Sarabun', sans-serif; /* ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ï‡∏≤ */
    }
    
    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏î‡∏π Minimal ‡∏Ç‡∏∂‡πâ‡∏ô */
    .stButton > button {
        border-radius: 8px;
        border: 1px solid #e0e0e0;
        background-color: #f5f5f5;
        color: #333;
        padding: 8px 15px;
        font-size: 14px;
        transition: all 0.2s ease-in-out;
    }
    .stButton > button:hover {
        background-color: #e0e0e0;
        border-color: #ccc;
    }

    /* ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏Å (primary button) */
    .stButton > button.primary {
        background-color: #4CAF50; /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
        color: white;
        border: none;
    }
    .stButton > button.primary:hover {
        background-color: #45a049; /* ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
    }

    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö input fields */
    .stTextInput > div > div > input {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 8px 12px;
    }

    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö expander */
    .streamlit-expanderHeader {
        background-color: #f0f2f6; /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á header */
        border-radius: 8px;
        padding: 10px;
        font-weight: bold;
    }
    .streamlit-expanderContent {
        border: 1px solid #e0e0e0;
        border-top: none;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
        padding: 15px;
        background-color: #ffffff;
    }
</style>
""", unsafe_allow_html=True)


# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Session
if 'current_view' not in st.session_state:
    st.session_state.current_view = 'list'
if 'edit_teacher_id' not in st.session_state:
    st.session_state.edit_teacher_id = None
if 'photo_cleared' not in st.session_state:
    st.session_state.photo_cleared = False
if 'search_query_school' not in st.session_state:
    st.session_state.search_query_school = ""

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á/‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ)
setup_database()

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß: ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏•‡πÇ‡∏Å‡πâ ---
header_container = st.container()
with header_container:
    col_text, col_logo = st.columns([5, 1])
    with col_text:
        st.markdown("## üë®‚Äçüè´ **‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô 2**", unsafe_allow_html=True)
    with col_logo:
        logo_path = "ban_dan_2_logo.png"  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        if os.path.exists(logo_path):
            try:
                logo = Image.open(logo_path)
                st.image(logo, width=100)  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            except Exception as e:
                st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ: {e}")
        else:
            st.warning(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ó‡∏µ‡πà: {logo_path}")

st.markdown("---")  # ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ö‡πà‡∏á

# --- Navigation Buttons and Export ---
nav_container = st.container()
with nav_container:
    # ‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    col1, col2, col3, _ = st.columns([1,1,1,3])  
    with col1:
        if st.button("üìö ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", key="show_all", use_container_width=True):
            st.session_state.current_view = 'list'
            st.session_state.edit_teacher_id = None
            st.session_state.photo_cleared = False
            st.session_state.search_query_school = "" # ‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            st.rerun() # ‡∏£‡∏µ‡∏£‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
    with col2:
        if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÉ‡∏´‡∏°‡πà", key="add_new", use_container_width=True):
            st.session_state.current_view = 'add'
            st.session_state.edit_teacher_id = None
            st.session_state.photo_cleared = False
            st.rerun()
    with col3:
        # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel
        excel_file_data = export_teachers_to_excel()
        st.download_button(
            label="‚¨áÔ∏è Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π (.xlsx)",  
            data=excel_file_data,
            file_name="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π_‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô2.xlsx",  
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",  
            key="download_excel_button",
            use_container_width=True
        )

st.markdown("---")  # ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ö‡πà‡∏á

# --- Content Area ---
content_container = st.container()
with content_container:
    if st.session_state.current_view == 'list':
        st.header("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π")

        # --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ---
        with st.expander("üîé ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π", expanded=False):
            search_col_input, search_col_button = st.columns([3, 1])
            with search_col_input:
                search_term = st.text_input(
                    "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:",  
                    value=st.session_state.search_query_school,  
                    key="school_search_input",
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ö‡πâ‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠"
                )
            with search_col_button:
                st.write("") # ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πà‡∏≥‡∏•‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
                if st.button("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤", key="search_button", use_container_width=True):
                    st.session_state.search_query_school = search_term
        
        st.markdown("<br>", unsafe_allow_html=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á

        teachers = get_all_teachers_from_db_cached()
        
        # ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        if st.session_state.search_query_school:
            search_lower = st.session_state.search_query_school.lower()
            filtered_teachers = [
                t for t in teachers  
                if t['school_affiliation'] and search_lower in t['school_affiliation'].lower()
            ]
            st.info(f"‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: '{st.session_state.search_query_school}' ({len(filtered_teachers)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")
            teachers_to_display = filtered_teachers
        else:
            teachers_to_display = teachers

        if teachers_to_display:
            # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Card
            for teacher in teachers_to_display:  
                teacher_card = st.container(border=True)  # ‡∏™‡∏£‡πâ‡∏≤‡∏á Card ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö
                with teacher_card:
                    col_left, col_right = st.columns([2, 1]) # ‡πÅ‡∏ö‡πà‡∏á 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Card
                    with col_left:
                        st.markdown(f"### {teacher['full_name']} (ID: {teacher['id']})")
                        st.markdown(f"**‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:** {teacher.get('position', '-') or '-'}") # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (‡πÉ‡∏ä‡πâ .get ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô KeyError ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ô‡∏µ‡πâ)
                        st.markdown(f"**‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:** {teacher['school_affiliation'] or '-'}")
                        st.markdown(f"**‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å:** {teacher['major_subject'] or '-'}")
                        st.markdown(f"**‡∏™‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤:** {teacher['teaching_subjects'] or '-'}")
                        st.markdown(f"**‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:** {teacher['contact_number'] or '-'}")
                    with col_right:
                        if teacher['photo_path']:
                            photo_path_full = os.path.join(UPLOAD_FOLDER, teacher['photo_path'])
                            if os.path.exists(photo_path_full):
                                st.image(photo_path_full, caption=f"‡∏£‡∏π‡∏õ {teacher['full_name']}", width=150)
                            else:
                                st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")
                        else:
                            st.info("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")
                    
                        st.markdown("<br>", unsafe_allow_html=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°
                        # ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏•‡∏ö
                        edit_button = st.button(f"‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", key=f"edit_teacher_{teacher['id']}", use_container_width=True)
                        delete_button = st.button(f"üóëÔ∏è ‡∏•‡∏ö", key=f"delete_teacher_{teacher['id']}", use_container_width=True)
                        
                        if edit_button:
                            st.session_state.current_view = 'edit'
                            st.session_state.edit_teacher_id = teacher['id']
                            st.rerun() # ‡∏£‡∏µ‡∏£‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                        
                        if delete_button:
                            # ‡∏Å‡∏•‡πÑ‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏≠‡∏á‡∏ä‡∏±‡πâ‡∏ô
                            if st.session_state.get(f'confirm_delete_{teacher["id"]}', False):
                                # ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏à‡∏£‡∏¥‡∏á
                                if st.button("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö", key=f"confirm_delete_final_{teacher['id']}", type="primary", use_container_width=True):
                                    if delete_teacher_from_db(teacher['id']):
                                        st.session_state.current_view = 'list'
                                    del st.session_state[f'confirm_delete_{teacher["id"]}'] # ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
                                    st.rerun()
                            else:
                                # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö
                                st.session_state[f'confirm_delete_{teacher["id"]}'] = True
                                st.warning(f"‡∏Ñ‡∏•‡∏¥‡∏Å '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö '{teacher['full_name']}'")
                st.markdown("<br>", unsafe_allow_html=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Card

        else:
            st.info("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")

    elif st.session_state.current_view == 'add':
        st.header("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡πÉ‡∏´‡∏°‡πà")
        with st.form("add_teacher_form", clear_on_submit=True):
            full_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•:", key="add_full_name")
            position = st.text_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:", key="add_position", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢, ‡∏Ñ‡∏£‡∏π‡∏ä‡∏≥‡∏ô‡∏≤‡∏ç‡∏Å‡∏≤‡∏£")
            school_affiliation = st.text_input("‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:", key="add_school_affiliation")
            major_subject = st.text_input("‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å:", key="add_major_subject")
            teaching_subjects = st.text_input("‡∏™‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≠‡∏°‡∏°‡πà‡∏≤):", key="add_teaching_subjects")
            contact_number = st.text_input("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:", key="add_contact_number")
            photo_file = st.file_uploader("‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤:", type=["png", "jpg", "jpeg"], key="add_photo_uploader")

            submitted = st.form_submit_button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π", type="primary")
            if submitted:
                if full_name:
                    add_teacher_to_db(full_name, school_affiliation, major_subject, teaching_subjects, contact_number, photo_file, position)
                    st.session_state.current_view = 'list' # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                    st.rerun()
                else:
                    st.error("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤!")

    elif st.session_state.current_view == 'edit':
        teacher_id_to_edit = st.session_state.edit_teacher_id
        if teacher_id_to_edit:
            teacher_data = get_teacher_by_id_from_db(teacher_id_to_edit)
            if teacher_data:
                st.header(f"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π: {teacher_data['full_name']}")
                with st.form("edit_teacher_form"):
                    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
                    new_full_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•:", value=teacher_data['full_name'] or "", key="edit_full_name")
                    new_position = st.text_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:", value=teacher_data.get('position', '') or "", key="edit_position")
                    new_school_affiliation = st.text_input("‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:", value=teacher_data['school_affiliation'] or "", key="edit_school_affiliation")
                    new_major_subject = st.text_input("‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏≠‡∏Å:", value=teacher_data['major_subject'] or "", key="edit_major_subject")
                    new_teaching_subjects = st.text_input("‡∏™‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≠‡∏°‡∏°‡πà‡∏≤):", value=teacher_data['teaching_subjects'] or "", key="edit_teaching_subjects")
                    new_contact_number = st.text_input("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:", value=teacher_data['contact_number'] or "", key="edit_contact_number")

                    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                    if teacher_data['photo_path']:
                        photo_path_full = os.path.join(UPLOAD_FOLDER, teacher_data['photo_path'])
                        if os.path.exists(photo_path_full):
                            st.image(photo_path_full, caption="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", width=150)
                        else:
                            st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå")
                    else:
                        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ")

                    # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
                    new_photo_file = st.file_uploader("‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà):", type=["png", "jpg", "jpeg"], key="edit_photo_uploader")
                    
                    # Checkbox ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                    clear_photo = st.checkbox("‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", value=st.session_state.get('photo_cleared', False), key="clear_current_photo")
                    st.session_state.photo_cleared = clear_photo

                    submitted = st.form_submit_button("üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", type="primary")
                    if submitted:
                        if not new_full_name:
                            st.error("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤!")
                        else:
                            photo_to_save = new_photo_file
                            if st.session_state.photo_cleared:
                                photo_to_save = None # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô None ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

                            if update_teacher_in_db(
                                teacher_id_to_edit,
                                new_full_name,
                                new_school_affiliation,
                                new_major_subject,
                                new_teaching_subjects,
                                new_contact_number,
                                photo_to_save,
                                new_position 
                            ):
                                st.session_state.current_view = 'list' # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                st.session_state.edit_teacher_id = None # ‡∏•‡πâ‡∏≤‡∏á ID ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                st.session_state.photo_cleared = False # ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                                st.rerun()
            else:
                st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
                st.session_state.current_view = 'list'
                st.rerun()
